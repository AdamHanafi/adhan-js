{"version":3,"sources":["webpack://adhan/webpack/universalModuleDefinition","webpack://adhan/webpack/bootstrap","webpack://adhan/./src/Coordinates.js","webpack://adhan/./src/MathUtils.js","webpack://adhan/./src/DateUtils.js","webpack://adhan/./src/Astronomical.js","webpack://adhan/./src/SolarCoordinates.js","webpack://adhan/./src/SolarTime.js","webpack://adhan/./src/TimeComponents.js","webpack://adhan/./src/Prayer.js","webpack://adhan/./src/PrayerTimes.js","webpack://adhan/./src/Madhab.js","webpack://adhan/./src/HighLatitudeRule.js","webpack://adhan/./src/CalculationParameters.js","webpack://adhan/./src/CalculationMethod.js","webpack://adhan/./src/Qibla.js","webpack://adhan/./src/Adhan.js"],"names":["Coordinates","constructor","latitude","longitude","degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","normalizeToScale","number","max","floor","unwindAngle","angle","quadrantShiftAngle","round","dateByAddingDays","date","days","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","Date","UTC","dateByAddingMinutes","dateByAddingSeconds","getTime","roundedMinute","offset","dayOfYear","returnedDayOfYear","feb","Astronomical","isLeapYear","getFullYear","months","i","getMonth","getDate","julianDayFromDate","julianDay","getHours","getMinutes","meanSolarLongitude","julianCentury","T","term1","term2","term3","pow","L0","meanLunarLongitude","Lp","ascendingLunarNodeLongitude","term4","Omega","meanSolarAnomaly","M","solarEquationOfTheCenter","meanAnomaly","Mrad","sin","apparentSolarLongitude","meanLongitude","Lambda","meanObliquityOfTheEcliptic","apparentObliquityOfTheEcliptic","Epsilon0","O","cos","meanSiderealTime","JD","Theta","nutationInLongitude","solarLongitude","lunarLongitude","ascendingNode","nutationInObliquity","altitudeOfCelestialBody","observerLatitude","declination","localHourAngle","Phi","delta","H","asin","approximateTransit","siderealTime","rightAscension","L","Theta0","a2","Lw","correctedTransit","previousRightAscension","nextRightAscension","m0","a1","a3","a","interpolateAngles","dm","correctedHourAngle","coordinates","afterTransit","previousDeclination","nextDeclination","h0","d2","d1","d3","H0","acos","m","interpolate","h","y2","y1","y3","n","b","c","trunc","x","ceil","Y","D","A","B","i0","i1","seasonAdjustedMorningTwilight","sunrise","abs","d","adjustment","dyy","daysSinceSolstice","seasonAdjustedEveningTwilight","sunset","northernOffset","southernOffset","daysInYear","SolarCoordinates","dPsi","dEpsilon","EpsilonApparent","atan2","apparentSiderealTime","SolarTime","setHours","setMinutes","observer","solar","previous","next","prevSolar","nextSolar","solarAltitude","approxTransit","transit","hourAngle","afternoon","shadowLength","tangent","inverse","tan","atan","TimeComponents","utcDate","Prayer","Fajr","Sunrise","Dhuhr","Asr","Maghrib","Isha","None","PrayerTimes","calculationParameters","solarTime","fajrTime","sunriseTime","dhuhrTime","asrTime","maghribTime","ishaTime","nightFraction","madhab","tomorrowSunrise","night","fajrAngle","method","safeFajr","portion","nightPortions","fajr","isNaN","ishaInterval","ishaAngle","safeIsha","isha","fajrAdjustment","adjustments","methodAdjustments","sunriseAdjustment","dhuhrAdjustment","dhuhr","asrAdjustment","asr","maghribAdjustment","maghrib","ishaAdjustment","timeForPrayer","prayer","currentPrayer","nextPrayer","Madhab","Shafi","Hanafi","HighLatitudeRule","MiddleOfTheNight","SeventhOfTheNight","TwilightAngle","CalculationParameters","methodName","highLatitudeRule","CalculationMethod","MuslimWorldLeague","params","Egyptian","Karachi","UmmAlQura","Dubai","MoonsightingCommittee","NorthAmerica","Kuwait","Qatar","Singapore","Other","qibla","makkah","adhan","Qibla"],"mappings":"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","file":"Adhan.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"adhan\"] = factory();\n\telse\n\t\troot[\"adhan\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Coordinates {\n    constructor(latitude, longitude) {\n        this.latitude = latitude;\n        this.longitude = longitude;\n    }\n}\n","export function degreesToRadians(degrees) {\n    return (degrees * Math.PI) / 180.0;\n}\n\nexport function radiansToDegrees(radians) {\n    return (radians * 180.0) / Math.PI;\n}\n\nexport function normalizeToScale(number, max) {\n    return number - (max * (Math.floor(number / max)))\n}\n\nexport function unwindAngle(angle) {\n    return normalizeToScale(angle, 360.0);\n}\n\nexport function quadrantShiftAngle(angle) {\n    if (angle >= -180 && angle <= 180) {\n        return angle;\n    }\n\n    return angle - (360 * Math.round(angle/360));\n}\n","import Astronomical from './Astronomical';\n\nexport function dateByAddingDays(date, days) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const day = date.getUTCDate() + days;\n    const hours = date.getUTCHours();\n    const minutes = date.getUTCMinutes();\n    const seconds = date.getUTCSeconds();\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nexport function dateByAddingMinutes(date, minutes) {\n    return dateByAddingSeconds(date, minutes * 60);\n}\n\nexport function dateByAddingSeconds(date, seconds) {\n    return new Date(date.getTime() + (seconds * 1000));\n}\n\nexport function roundedMinute(date) {\n    const seconds = date.getUTCSeconds();\n    const offset = seconds >= 30 ? 60 - seconds : -1 * seconds;\n    return dateByAddingSeconds(date, offset);\n}\n\nexport function dayOfYear(date) {\n    let returnedDayOfYear = 0;\n    const feb = Astronomical.isLeapYear(date.getFullYear()) ? 29 : 28;\n    const months = [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    for (let i = 0; i < date.getMonth(); i++) {\n        returnedDayOfYear += months[i];\n    }\n\n    returnedDayOfYear += date.getDate();\n\n    return returnedDayOfYear;\n}\n\nexport function julianDayFromDate(date) {\n    return Astronomical.julianDay(date.getFullYear(), date.getMonth() + 1, date.getDate(), date.getHours() + (date.getMinutes() / 60));\n}\n","import { degreesToRadians, radiansToDegrees, unwindAngle, normalizeToScale, quadrantShiftAngle } from './MathUtils';\nimport { dateByAddingSeconds } from './DateUtils';\n\nconst Astronomical = {\n\n    /* The geometric mean longitude of the sun in degrees. */\n    meanSolarLongitude: function(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 163 */\n        const term1 = 280.4664567;\n        const term2 = 36000.76983 * T;\n        const term3 = 0.0003032 * Math.pow(T, 2);\n        const L0 = term1 + term2 + term3;\n        return unwindAngle(L0);\n    },\n\n    /* The geometric mean longitude of the moon in degrees. */\n    meanLunarLongitude: function(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = 218.3165;\n        const term2 = 481267.8813 * T;\n        const Lp = term1 + term2;\n        return unwindAngle(Lp);\n    },\n\n    ascendingLunarNodeLongitude: function(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = 125.04452;\n        const term2 = 1934.136261 * T;\n        const term3 = 0.0020708 * Math.pow(T, 2);\n        const term4 = Math.pow(T, 3) / 450000;\n        const Omega = term1 - term2 + term3 + term4;\n        return unwindAngle(Omega);\n    },\n\n    /* The mean anomaly of the sun. */\n    meanSolarAnomaly: function(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 163 */\n        const term1 = 357.52911;\n        const term2 = 35999.05029 * T;\n        const term3 = 0.0001537 * Math.pow(T, 2);\n        const M = term1 + term2 - term3;\n        return unwindAngle(M);\n    },\n\n    /* The Sun's equation of the center in degrees. */\n    solarEquationOfTheCenter: function(julianCentury, meanAnomaly) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 164 */\n        const Mrad = degreesToRadians(meanAnomaly);\n        const term1 = (1.914602 - (0.004817 * T) - (0.000014 * Math.pow(T, 2))) * Math.sin(Mrad);\n        const term2 = (0.019993 - (0.000101 * T)) * Math.sin(2 * Mrad);\n        const term3 = 0.000289 * Math.sin(3 * Mrad);\n        return term1 + term2 + term3;\n    },\n\n    /* The apparent longitude of the Sun, referred to the\n        true equinox of the date. */\n    apparentSolarLongitude: function(julianCentury, meanLongitude) {\n        const T = julianCentury;\n        const L0 = meanLongitude;\n        /* Equation from Astronomical Algorithms page 164 */\n        const longitude = L0 + Astronomical.solarEquationOfTheCenter(T, Astronomical.meanSolarAnomaly(T));\n        const Omega = 125.04 - (1934.136 * T);\n        const Lambda = longitude - 0.00569 - (0.00478 * Math.sin(degreesToRadians(Omega)));\n        return unwindAngle(Lambda);\n    },\n\n    /* The mean obliquity of the ecliptic, formula\n        adopted by the International Astronomical Union.\n        Represented in degrees. */\n    meanObliquityOfTheEcliptic: function(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 147 */\n        const term1 = 23.439291;\n        const term2 = 0.013004167 * T;\n        const term3 = 0.0000001639 * Math.pow(T, 2);\n        const term4 = 0.0000005036 * Math.pow(T, 3);\n        return term1 - term2 - term3 + term4;\n    },\n\n    /* The mean obliquity of the ecliptic, corrected for\n        calculating the apparent position of the sun, in degrees. */\n    apparentObliquityOfTheEcliptic: function(julianCentury, meanObliquityOfTheEcliptic) {\n        const T = julianCentury;\n        const Epsilon0 = meanObliquityOfTheEcliptic;\n        /* Equation from Astronomical Algorithms page 165 */\n        const O = 125.04 - (1934.136 * T);\n        return Epsilon0 + (0.00256 * Math.cos(degreesToRadians(O)));\n    },\n\n    /* Mean sidereal time, the hour angle of the vernal equinox, in degrees. */\n    meanSiderealTime: function(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 165 */\n        const JD = (T * 36525) + 2451545.0;\n        const term1 = 280.46061837;\n        const term2 = 360.98564736629 * (JD - 2451545);\n        const term3 = 0.000387933 * Math.pow(T, 2);\n        const term4 = Math.pow(T, 3) / 38710000;\n        const Theta = term1 + term2 + term3 - term4;\n        return unwindAngle(Theta)\n    },\n\n    nutationInLongitude: function(julianCentury, solarLongitude, lunarLongitude, ascendingNode) {\n        const L0 = solarLongitude;\n        const Lp = lunarLongitude;\n        const Omega = ascendingNode;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = (-17.2/3600) * Math.sin(degreesToRadians(Omega));\n        const term2 =  (1.32/3600) * Math.sin(2 * degreesToRadians(L0));\n        const term3 =  (0.23/3600) * Math.sin(2 * degreesToRadians(Lp));\n        const term4 =  (0.21/3600) * Math.sin(2 * degreesToRadians(Omega));\n        return term1 - term2 - term3 + term4;\n    },\n\n    nutationInObliquity: function(julianCentury, solarLongitude, lunarLongitude, ascendingNode) {\n        const L0 = solarLongitude;\n        const Lp = lunarLongitude;\n        const Omega = ascendingNode;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 =  (9.2/3600) * Math.cos(degreesToRadians(Omega));\n        const term2 = (0.57/3600) * Math.cos(2 * degreesToRadians(L0));\n        const term3 = (0.10/3600) * Math.cos(2 * degreesToRadians(Lp));\n        const term4 = (0.09/3600) * Math.cos(2 * degreesToRadians(Omega));\n        return term1 + term2 + term3 - term4;\n    },\n\n    altitudeOfCelestialBody: function(observerLatitude, declination, localHourAngle) {\n        const Phi = observerLatitude;\n        const delta = declination;\n        const H = localHourAngle;\n        /* Equation from Astronomical Algorithms page 93 */\n        const term1 = Math.sin(degreesToRadians(Phi)) * Math.sin(degreesToRadians(delta));\n        const term2 = Math.cos(degreesToRadians(Phi)) * Math.cos(degreesToRadians(delta)) * Math.cos(degreesToRadians(H));\n        return radiansToDegrees(Math.asin(term1 + term2));\n    },\n\n    approximateTransit: function(longitude, siderealTime, rightAscension) {\n        const L = longitude;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = L * -1;\n        return normalizeToScale((a2 + Lw - Theta0) / 360, 1);\n    },\n\n    /* The time at which the sun is at its highest point in the sky (in universal time) */\n    correctedTransit: function(approximateTransit, longitude, siderealTime, rightAscension, previousRightAscension, nextRightAscension) {\n        const m0 = approximateTransit;\n        const L = longitude;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        const a1 = previousRightAscension;\n        const a3 = nextRightAscension;\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = L * -1;\n        const Theta = unwindAngle((Theta0 + (360.985647 * m0)));\n        const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m0));\n        const H = quadrantShiftAngle(Theta - Lw - a);\n        const dm = H / -360;\n        return (m0 + dm) * 24;\n    },\n\n    correctedHourAngle: function(approximateTransit, angle, coordinates, afterTransit, siderealTime,\n                                    rightAscension, previousRightAscension, nextRightAscension, declination, previousDeclination, nextDeclination) {\n        const m0 = approximateTransit;\n        const h0 = angle;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        const a1 = previousRightAscension;\n        const a3 = nextRightAscension;\n        const d2 = declination;\n        const d1 = previousDeclination;\n        const d3 = nextDeclination;\n\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = coordinates.longitude * -1;\n        const term1 = Math.sin(degreesToRadians(h0)) - (Math.sin(degreesToRadians(coordinates.latitude)) * Math.sin(degreesToRadians(d2)));\n        const term2 = Math.cos(degreesToRadians(coordinates.latitude)) * Math.cos(degreesToRadians(d2));\n        const H0 = radiansToDegrees(Math.acos(term1 / term2));\n        const m = afterTransit ? m0 + (H0 / 360) : m0 - (H0 / 360);\n        const Theta = unwindAngle((Theta0 + (360.985647 * m)));\n        const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m));\n        const delta = Astronomical.interpolate(d2, d1, d3, m);\n        const H = (Theta - Lw - a);\n        const h = Astronomical.altitudeOfCelestialBody(coordinates.latitude, delta, H);\n        const term3 = h - h0;\n        const term4 = 360 * Math.cos(degreesToRadians(delta)) * Math.cos(degreesToRadians(coordinates.latitude)) * Math.sin(degreesToRadians(H));\n        const dm = term3 / term4;\n        return (m + dm) * 24;\n    },\n\n    /* Interpolation of a value given equidistant\n        previous and next values and a factor\n        equal to the fraction of the interpolated\n        point's time over the time between values. */\n    interpolate: function(y2, y1, y3, n) {\n        /* Equation from Astronomical Algorithms page 24 */\n        const a = y2 - y1;\n        const b = y3 - y2;\n        const c = b - a;\n        return y2 + ((n/2) * (a + b + (n * c)));\n    },\n\n    /* Interpolation of three angles, accounting for\n        angle unwinding. */\n    interpolateAngles: function(y2, y1, y3, n) {\n        /* Equation from Astronomical Algorithms page 24 */\n        const a = unwindAngle(y2 - y1);\n        const b = unwindAngle(y3 - y2);\n        const c = b - a;\n        return y2 + ((n/2) * (a + b + (n * c)));\n    },\n\n    /* The Julian Day for the given Gregorian date components. */\n    julianDay: function(year, month, day, hours) {\n        /* Equation from Astronomical Algorithms page 60 */\n        if (typeof hours === 'undefined') {\n            hours = 0;\n        }\n\n        const trunc = Math.trunc || function (x) { return x < 0 ? Math.ceil(x) : Math.floor(x); };\n\n        const Y = trunc(month > 2 ? year : year - 1);\n        const M = trunc(month > 2 ? month : month + 12);\n        const D = day + (hours / 24);\n\n        const A = trunc(Y/100);\n        const B = trunc(2 - A + trunc(A/4));\n\n        const i0 = trunc(365.25 * (Y + 4716));\n        const i1 = trunc(30.6001 * (M + 1));\n\n        return i0 + i1 + D + B - 1524.5;\n    },\n\n    /* Julian century from the epoch. */\n    julianCentury: function(julianDay) {\n        /* Equation from Astronomical Algorithms page 163 */\n        return (julianDay - 2451545.0) / 36525;\n    },\n\n    /* Whether or not a year is a leap year (has 366 days). */\n    isLeapYear: function(year) {\n        if (year % 4 != 0) {\n            return false;\n        }\n\n        if (year % 100 == 0 && year % 400 != 0) {\n            return false;\n        }\n\n        return true;\n    },\n\n    seasonAdjustedMorningTwilight: function(latitude, dayOfYear, year, sunrise) {\n        const a = 75 + ((28.65 / 55.0) * Math.abs(latitude));\n        const b = 75 + ((19.44 / 55.0) * Math.abs(latitude));\n        const c = 75 + ((32.74 / 55.0) * Math.abs(latitude));\n        const d = 75 + ((48.10 / 55.0) * Math.abs(latitude));\n\n        const adjustment = (function() {\n            const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n            if ( dyy < 91) {\n                return a + ( b - a ) / 91.0 * dyy;\n            } else if ( dyy < 137) {\n                return b + ( c - b ) / 46.0 * ( dyy - 91 );\n            } else if ( dyy < 183 ) {\n                return c + ( d - c ) / 46.0 * ( dyy - 137 );\n            } else if ( dyy < 229 ) {\n                return d + ( c - d ) / 46.0 * ( dyy - 183 );\n            } else if ( dyy < 275 ) {\n                return c + ( b - c ) / 46.0 * ( dyy - 229 );\n            } else {\n                return b + ( a - b ) / 91.0 * ( dyy - 275 );\n            }\n        })();\n\n        return dateByAddingSeconds(sunrise, Math.round(adjustment * -60.0));\n    },\n\n    seasonAdjustedEveningTwilight: function(latitude, dayOfYear, year, sunset) {\n        const a = 75 + ((25.60 / 55.0) * Math.abs(latitude));\n        const b = 75 + ((2.050 / 55.0) * Math.abs(latitude));\n        const c = 75 - ((9.210 / 55.0) * Math.abs(latitude));\n        const d = 75 + ((6.140 / 55.0) * Math.abs(latitude));\n\n        const adjustment = (function() {\n            const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n            if ( dyy < 91) {\n                return a + ( b - a ) / 91.0 * dyy;\n            } else if ( dyy < 137) {\n                return b + ( c - b ) / 46.0 * ( dyy - 91 );\n            } else if ( dyy < 183 ) {\n                return c + ( d - c ) / 46.0 * ( dyy - 137 );\n            } else if ( dyy < 229 ) {\n                return d + ( c - d ) / 46.0 * ( dyy - 183 );\n            } else if ( dyy < 275 ) {\n                return c + ( b - c ) / 46.0 * ( dyy - 229 );\n            } else {\n                return b + ( a - b ) / 91.0 * ( dyy - 275 );\n            }\n        })();\n\n        return dateByAddingSeconds(sunset, Math.round(adjustment * 60.0));\n    },\n\n    daysSinceSolstice: function(dayOfYear, year, latitude) {\n        let daysSinceSolstice = 0;\n        const northernOffset = 10;\n        const southernOffset = Astronomical.isLeapYear(year) ? 173 : 172;\n        const daysInYear = Astronomical.isLeapYear(year) ? 366 : 365;\n\n        if (latitude >= 0) {\n            daysSinceSolstice = dayOfYear + northernOffset;\n            if (daysSinceSolstice >= daysInYear) {\n                daysSinceSolstice = daysSinceSolstice - daysInYear;\n            }\n        } else {\n            daysSinceSolstice = dayOfYear - southernOffset;\n            if (daysSinceSolstice < 0) {\n                daysSinceSolstice = daysSinceSolstice + daysInYear;\n            }\n        }\n\n        return daysSinceSolstice;\n    }\n};\n\nexport default Astronomical;","import Astronomical from './Astronomical';\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils';\n\nexport default class SolarCoordinates {\n    constructor(julianDay) {\n        const T = Astronomical.julianCentury(julianDay);\n        const L0 = Astronomical.meanSolarLongitude(T);\n        const Lp = Astronomical.meanLunarLongitude(T);\n        const Omega = Astronomical.ascendingLunarNodeLongitude(T);\n        const Lambda = degreesToRadians(Astronomical.apparentSolarLongitude(T, L0));\n        const Theta0 = Astronomical.meanSiderealTime(T);\n        const dPsi = Astronomical.nutationInLongitude(T, L0, Lp, Omega);\n        const dEpsilon = Astronomical.nutationInObliquity(T, L0, Lp, Omega);\n        const Epsilon0 = Astronomical.meanObliquityOfTheEcliptic(T);\n        const EpsilonApparent = degreesToRadians(Astronomical.apparentObliquityOfTheEcliptic(T, Epsilon0));\n\n        /* declination: The declination of the sun, the angle between\n            the rays of the Sun and the plane of the Earth's\n            equator, in degrees.\n            Equation from Astronomical Algorithms page 165 */\n        this.declination = radiansToDegrees(Math.asin(Math.sin(EpsilonApparent) * Math.sin(Lambda)));\n\n        /* rightAscension: Right ascension of the Sun, the angular distance on the\n            celestial equator from the vernal equinox to the hour circle,\n            in degrees.\n            Equation from Astronomical Algorithms page 165 */\n        this.rightAscension = unwindAngle(radiansToDegrees(Math.atan2(Math.cos(EpsilonApparent) * Math.sin(Lambda), Math.cos(Lambda))));\n\n        /* apparentSiderealTime: Apparent sidereal time, the hour angle of the vernal\n            equinox, in degrees.\n            Equation from Astronomical Algorithms page 88 */\n        this.apparentSiderealTime = Theta0 + (((dPsi * 3600) * Math.cos(degreesToRadians(Epsilon0 + dEpsilon))) / 3600);\n    }\n}\n\n","import Astronomical from './Astronomical';\nimport { julianDayFromDate } from './DateUtils';\nimport { degreesToRadians, radiansToDegrees } from './MathUtils'\nimport SolarCoordinates from './SolarCoordinates';\n\nexport default class SolarTime {\n    constructor(date, coordinates) {\n        // calculations need to occur at 0h0m UTC\n        date.setHours(0);\n        date.setMinutes(0);\n        this.date = date;\n        this.observer = coordinates;\n        this.solar = new SolarCoordinates(julianDayFromDate(date));\n\n        const previous = new Date(date.getFullYear(), date.getMonth(), date.getDate() - 1);\n        const next = new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1);\n\n        this.prevSolar = new SolarCoordinates(julianDayFromDate(previous));\n        this.nextSolar = new SolarCoordinates(julianDayFromDate(next));\n\n        const m0 = Astronomical.approximateTransit(coordinates.longitude, this.solar.apparentSiderealTime, this.solar.rightAscension);\n        const solarAltitude = -50.0 / 60.0;\n\n        this.approxTransit = m0;\n\n        this.transit = Astronomical.correctedTransit(m0, coordinates.longitude, this.solar.apparentSiderealTime, \n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension);\n\n        this.sunrise = Astronomical.correctedHourAngle(m0, solarAltitude, coordinates, false, this.solar.apparentSiderealTime, \n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension, \n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n\n        this.sunset = Astronomical.correctedHourAngle(m0, solarAltitude, coordinates, true, this.solar.apparentSiderealTime, \n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension, \n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n    }\n\n    hourAngle(angle, afterTransit) {\n        return Astronomical.correctedHourAngle(this.approxTransit, angle, this.observer, afterTransit, this.solar.apparentSiderealTime, \n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension, \n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n    }\n\n    afternoon(shadowLength) {\n        // TODO source shadow angle calculation\n        const tangent = Math.abs(this.observer.latitude - this.solar.declination);\n        const inverse = shadowLength + Math.tan(degreesToRadians(tangent));\n        const angle = radiansToDegrees(Math.atan(1.0 / inverse));\n        return this.hourAngle(angle, true);\n    }\n}\n\n\n","export default class TimeComponents {\n    constructor(number) {\n        this.hours = Math.floor(number);\n        this.minutes = Math.floor((number - this.hours) * 60);\n        this.seconds = Math.floor((number - (this.hours + this.minutes / 60)) * 60 * 60);\n        return this;\n    }\n    \n    utcDate(year, month, date) {\n        return new Date(Date.UTC(year, month, date, this.hours, this.minutes, this.seconds));\n    }\n}\n","const Prayer = {\n    Fajr: 0,\n    Sunrise: 1,\n    Dhuhr: 2,\n    Asr: 3,\n    Maghrib: 4,\n    Isha: 5,\n    None: 6\n};\n\nexport default Prayer;","import SolarTime from './SolarTime';\nimport TimeComponents from './TimeComponents';\nimport Prayer from './Prayer';\nimport Astronomical from './Astronomical';\nimport { dateByAddingDays, dateByAddingMinutes, dateByAddingSeconds, roundedMinute, dayOfYear } from './DateUtils';\n\nexport default class PrayerTimes {\n    constructor(coordinates, date, calculationParameters) {\n        var solarTime = new SolarTime(date, coordinates);\n\n        var fajrTime;\n        var sunriseTime;\n        var dhuhrTime;\n        var asrTime;\n        var maghribTime;\n        var ishaTime;\n\n        var nightFraction;\n\n        dhuhrTime = new TimeComponents(solarTime.transit).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        maghribTime = new TimeComponents(solarTime.sunset).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n        asrTime = new TimeComponents(solarTime.afternoon(calculationParameters.madhab)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n        var tomorrowSunrise = dateByAddingDays(sunriseTime, 1);\n        var night = (tomorrowSunrise - maghribTime) / 1000;\n\n        fajrTime = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.fajrAngle, false)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n        // special case for moonsighting committee above latitude 55\n        if (calculationParameters.method == \"MoonsightingCommittee\" && coordinates.latitude >= 55) {\n            nightFraction = night / 7;\n            fajrTime = dateByAddingSeconds(sunriseTime, -nightFraction);\n        }\n\n        var safeFajr = (function () {\n            if (calculationParameters.method == \"MoonsightingCommittee\") {\n                return Astronomical.seasonAdjustedMorningTwilight(coordinates.latitude, dayOfYear(date), date.getFullYear(), sunriseTime);\n            }\n            else {\n                var portion = calculationParameters.nightPortions().fajr;\n                nightFraction = portion * night;\n                return dateByAddingSeconds(sunriseTime, -nightFraction);\n            }\n        })();\n\n        if (fajrTime == null || isNaN(fajrTime.getTime()) || safeFajr > fajrTime) {\n            fajrTime = safeFajr;\n        }\n\n        if (calculationParameters.ishaInterval > 0) {\n            ishaTime = dateByAddingMinutes(maghribTime, calculationParameters.ishaInterval);\n        } else {\n            ishaTime = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.ishaAngle, true)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n            \n            // special case for moonsighting committee above latitude 55\n            if (calculationParameters.method == \"MoonsightingCommittee\" && coordinates.latitude >= 55) {\n                nightFraction = night / 7;\n                ishaTime = dateByAddingSeconds(maghribTime, nightFraction);\n            }\n\n            var safeIsha = (function () {\n                if (calculationParameters.method == \"MoonsightingCommittee\") {\n                    return Astronomical.seasonAdjustedEveningTwilight(coordinates.latitude, dayOfYear(date), date.getFullYear(), maghribTime);\n                }\n                else {\n                    var portion = calculationParameters.nightPortions().isha;\n                    nightFraction = portion * night;\n                    return dateByAddingSeconds(maghribTime, nightFraction);\n                }\n            })();\n\n            if (ishaTime == null || isNaN(ishaTime.getTime()) || safeIsha < ishaTime) {\n                ishaTime = safeIsha;\n            }\n        }\n\n        var fajrAdjustment = (calculationParameters.adjustments.fajr || 0) + (calculationParameters.methodAdjustments.fajr || 0);\n        var sunriseAdjustment = (calculationParameters.adjustments.sunrise || 0) + (calculationParameters.methodAdjustments.sunrise || 0);\n        var dhuhrAdjustment = (calculationParameters.adjustments.dhuhr || 0) + (calculationParameters.methodAdjustments.dhuhr || 0);\n        var asrAdjustment = (calculationParameters.adjustments.asr || 0) + (calculationParameters.methodAdjustments.asr || 0);\n        var maghribAdjustment = (calculationParameters.adjustments.maghrib || 0) + (calculationParameters.methodAdjustments.maghrib || 0);\n        var ishaAdjustment = (calculationParameters.adjustments.isha || 0) + (calculationParameters.methodAdjustments.isha || 0);\n\n        this.fajr = roundedMinute(dateByAddingMinutes(fajrTime, fajrAdjustment));\n        this.sunrise = roundedMinute(dateByAddingMinutes(sunriseTime, sunriseAdjustment));\n        this.dhuhr = roundedMinute(dateByAddingMinutes(dhuhrTime, dhuhrAdjustment));\n        this.asr = roundedMinute(dateByAddingMinutes(asrTime, asrAdjustment));\n        this.maghrib = roundedMinute(dateByAddingMinutes(maghribTime, maghribAdjustment));\n        this.isha = roundedMinute(dateByAddingMinutes(ishaTime, ishaAdjustment));\n    }\n\n    timeForPrayer(prayer) {\n        if (prayer == Prayer.Fajr) {\n            return this.fajr;\n        }\n        else if (prayer == Prayer.Sunrise) {\n            return this.sunrise;\n        }\n        else if (prayer == Prayer.Dhuhr) {\n            return this.dhuhr;\n        }\n        else if (prayer == Prayer.Asr) {\n            return this.asr;\n        }\n        else if (prayer == Prayer.Maghrib) {\n            return this.maghrib;\n        }\n        else if (prayer == Prayer.Isha) {\n            return this.isha;\n        }\n        else {\n            return null;\n        }\n    }\n\n    currentPrayer(date) {\n        if (typeof date === 'undefined') {\n            date = new Date();\n        }\n        if (date >= this.isha) {\n            return Prayer.Isha;\n        }\n        else if (date >= this.maghrib) {\n            return Prayer.Maghrib;\n        }\n        else if (date >= this.asr) {\n            return Prayer.Asr;\n        }\n        else if (date >= this.dhuhr) {\n            return Prayer.Dhuhr;\n        }\n        else if (date >= this.sunrise) {\n            return Prayer.Sunrise;\n        }\n        else if (date >= this.fajr) {\n            return Prayer.Fajr;\n        }\n        else {\n            return Prayer.None;\n        }\n    }\n\n    nextPrayer(date) {\n        if (typeof date === 'undefined') {\n            date = new Date();\n        }\n        if (date >= this.isha) {\n            return Prayer.None;\n        }\n        else if (date >= this.maghrib) {\n            return Prayer.Isha;\n        }\n        else if (date >= this.asr) {\n            return Prayer.Maghrib;\n        }\n        else if (date >= this.dhuhr) {\n            return Prayer.Asr;\n        }\n        else if (date >= this.sunrise) {\n            return Prayer.Dhuhr;\n        }\n        else if (date >= this.fajr) {\n            return Prayer.Sunrise;\n        }\n        else {\n            return Prayer.Fajr;\n        }\n    }\n}\n\n","const Madhab = {\n    Shafi: 1,\n    Hanafi: 2\n};\n\nexport default Madhab;","const HighLatitudeRule = {\n    MiddleOfTheNight: 1,\n    SeventhOfTheNight: 2,\n    TwilightAngle: 3\n};\n\nexport default HighLatitudeRule;","import Madhab from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\n\nexport default class CalculationParameters {\n    constructor(fajrAngle, ishaAngle, ishaInterval, methodName) {\n        this.method = methodName || \"Other\";\n        this.fajrAngle = fajrAngle || 0;\n        this.ishaAngle = ishaAngle || 0;\n        this.ishaInterval = ishaInterval || 0;\n        this.madhab = Madhab.Shafi;\n        this.highLatitudeRule = HighLatitudeRule.MiddleOfTheNight;\n        this.adjustments = { fajr: 0, sunrise: 0, dhuhr: 0, asr: 0, maghrib: 0, isha: 0 };\n        this.methodAdjustments = { fajr: 0, sunrise: 0, dhuhr: 0, asr: 0, maghrib: 0, isha: 0 };\n    }\n\n    nightPortions() {\n        switch (this.highLatitudeRule) {\n            case HighLatitudeRule.MiddleOfTheNight:\n                return { fajr: 1 / 2, isha: 1 / 2 };\n            case HighLatitudeRule.SeventhOfTheNight:\n                return { fajr: 1 / 7, isha: 1 / 7 };\n            case HighLatitudeRule.TwilightAngle:\n                return { fajr: this.fajrAngle / 60, isha: this.ishaAngle / 60 };\n        }\n    }\n}\n","import CalculationParameters from './CalculationParameters';\n\nconst CalculationMethod = {\n    // Muslim World League\n    MuslimWorldLeague: function() {\n        var params = new CalculationParameters(18, 17, 0, \"MuslimWorldLeague\");\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Egyptian General Authority of Survey\n    Egyptian: function() {\n        var params = new CalculationParameters(19.5, 17.5, 0, \"Egyptian\");\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // University of Islamic Sciences, Karachi\n    Karachi: function() {\n        var params = new CalculationParameters(18, 18, 0, \"Karachi\");\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Umm al-Qura University, Makkah\n    UmmAlQura: function() {\n        return new CalculationParameters(18.5, 0, 90, \"UmmAlQura\");\n    },\n\n    // Dubai\n    Dubai: function() {\n        var params = new CalculationParameters(18.2, 18.2, 0, \"Dubai\");\n        params.methodAdjustments = { sunrise: -3, dhuhr: 3, asr: 3, maghrib: 3 };\n        return params;\n    },\n\n    // Moonsighting Committee\n    MoonsightingCommittee: function() {\n        var params = new CalculationParameters(18, 18, 0, \"MoonsightingCommittee\");\n        params.methodAdjustments = { dhuhr: 5, maghrib: 3 };\n        return params;\n    },\n\n    // ISNA\n    NorthAmerica: function() {\n        var params = new CalculationParameters(15, 15, 0, \"NorthAmerica\");\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Kuwait\n    Kuwait: function() {\n        return new CalculationParameters(18, 17.5, 0, \"Kuwait\");\n    },\n\n    // Qatar\n    Qatar: function() {\n        return new CalculationParameters(18, 0, 90, \"Qatar\");\n    },\n\n    // Singapore\n    Singapore: function() {\n        var params = new CalculationParameters(20, 18, 0, \"Singapore\");\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Other\n    Other: function() {\n        return new CalculationParameters(0, 0, 0, \"Other\");\n    }\n};\n\nexport default CalculationMethod;","import Coordinates from './Coordinates'\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils'\n\nexport default function qibla(coordinates) {\n    var makkah = new Coordinates(21.4225241, 39.8261818);\n\n    // Equation from \"Spherical Trigonometry For the use of colleges and schools\" page 50\n    var term1 = (\n        Math.sin(degreesToRadians(makkah.longitude) -\n        degreesToRadians(coordinates.longitude))\n    );\n    var term2 = (\n        Math.cos(degreesToRadians(coordinates.latitude)) *\n        Math.tan(degreesToRadians(makkah.latitude))\n    );\n    var term3 = (\n        Math.sin(degreesToRadians(coordinates.latitude)) *\n        Math.cos(degreesToRadians(makkah.longitude) -\n        degreesToRadians(coordinates.longitude))\n    );\n    var angle = Math.atan2(term1, term2 - term3);\n\n    return unwindAngle(radiansToDegrees(angle));\n}\n","import Coordinates from './Coordinates';\nimport PrayerTimes from './PrayerTimes';\nimport Prayer from './Prayer';\nimport Madhab from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport CalculationMethod from './CalculationMethod';\nimport CalculationParameters from './CalculationParameters';\nimport qibla from './Qibla';\n\n\nconst adhan = {\n    Prayer: Prayer,\n    Madhab: Madhab,\n    HighLatitudeRule: HighLatitudeRule,\n    Coordinates: Coordinates,\n    CalculationParameters: CalculationParameters,\n    CalculationMethod: CalculationMethod,\n    PrayerTimes: PrayerTimes,\n    Qibla: qibla\n};\n\nexport default adhan;"],"sourceRoot":""}